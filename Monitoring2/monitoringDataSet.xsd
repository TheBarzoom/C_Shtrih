<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="monitoringDataSet" targetNamespace="http://tempuri.org/monitoringDataSet.xsd" xmlns:mstns="http://tempuri.org/monitoringDataSet.xsd" xmlns="http://tempuri.org/monitoringDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="monitoringConnectionSmyBase" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="monitoringConnectionSmyBase (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Monitoring2.Properties.Settings.GlobalReference.Default.monitoringConnectionSmyBase" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="cityTableAdapter" GeneratorDataComponentClassName="cityTableAdapter" Name="city" UserDataComponentName="cityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="monitoringConnectionSmyBase (Settings)" DbObjectName="monitoring.dbo.city" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[city] WHERE (([id_city] = @Original_id_city) AND ([n_population] = @Original_n_population))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_n_population" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="n_population" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[city] ([name_city], [n_population]) VALUES (@name_city, @n_population);
SELECT id_city, name_city, n_population FROM city WHERE (id_city = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_city" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="name_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@n_population" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="n_population" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_city, name_city, n_population FROM dbo.city</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[city] SET [name_city] = @name_city, [n_population] = @n_population WHERE (([id_city] = @Original_id_city) AND ([n_population] = @Original_n_population));
SELECT id_city, name_city, n_population FROM city WHERE (id_city = @id_city)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_city" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="name_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@n_population" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="n_population" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_n_population" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="n_population" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_city" ColumnName="id_city" DataSourceName="monitoring.dbo.city" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_city" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_city" DataSetColumn="id_city" />
              <Mapping SourceColumn="name_city" DataSetColumn="name_city" />
              <Mapping SourceColumn="n_population" DataSetColumn="n_population" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="climate_dataTableAdapter" GeneratorDataComponentClassName="climate_dataTableAdapter" Name="climate_data" UserDataComponentName="climate_dataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="monitoringConnectionSmyBase (Settings)" DbObjectName="monitoring.dbo.climate_data" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[climate_data] WHERE (([id_data] = @Original_id_data) AND ([pressure] = @Original_pressure) AND ([temperature] = @Original_temperature) AND ([humidity] = @Original_humidity) AND ([radiation] = @Original_radiation) AND ([data_date] = @Original_data_date) AND ([id_city] = @Original_id_city) AND ([id_sensor] = @Original_id_sensor))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_data" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_data" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_pressure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pressure" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_temperature" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="temperature" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_humidity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_radiation" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="radiation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_data_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="data_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[climate_data] ([pressure], [temperature], [humidity], [radiation], [data_date], [id_city], [id_sensor]) VALUES (@pressure, @temperature, @humidity, @radiation, @data_date, @id_city, @id_sensor);
SELECT id_data, pressure, temperature, humidity, radiation, data_date, id_city, id_sensor FROM climate_data WHERE (id_data = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@pressure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pressure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@temperature" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="temperature" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@humidity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@radiation" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="radiation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@data_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="data_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_data, pressure, temperature, humidity, radiation, data_date, id_city, id_sensor FROM dbo.climate_data</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[climate_data] SET [pressure] = @pressure, [temperature] = @temperature, [humidity] = @humidity, [radiation] = @radiation, [data_date] = @data_date, [id_city] = @id_city, [id_sensor] = @id_sensor WHERE (([id_data] = @Original_id_data) AND ([pressure] = @Original_pressure) AND ([temperature] = @Original_temperature) AND ([humidity] = @Original_humidity) AND ([radiation] = @Original_radiation) AND ([data_date] = @Original_data_date) AND ([id_city] = @Original_id_city) AND ([id_sensor] = @Original_id_sensor));
SELECT id_data, pressure, temperature, humidity, radiation, data_date, id_city, id_sensor FROM climate_data WHERE (id_data = @id_data)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@pressure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pressure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@temperature" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="temperature" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@humidity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@radiation" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="radiation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@data_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="data_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_data" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_data" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_pressure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="pressure" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_temperature" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="temperature" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_humidity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_radiation" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="radiation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_data_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="data_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_data" ColumnName="id_data" DataSourceName="monitoring.dbo.climate_data" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_data" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_data" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_data" DataSetColumn="id_data" />
              <Mapping SourceColumn="pressure" DataSetColumn="pressure" />
              <Mapping SourceColumn="temperature" DataSetColumn="temperature" />
              <Mapping SourceColumn="humidity" DataSetColumn="humidity" />
              <Mapping SourceColumn="radiation" DataSetColumn="radiation" />
              <Mapping SourceColumn="data_date" DataSetColumn="data_date" />
              <Mapping SourceColumn="id_city" DataSetColumn="id_city" />
              <Mapping SourceColumn="id_sensor" DataSetColumn="id_sensor" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="sensorTableAdapter" GeneratorDataComponentClassName="sensorTableAdapter" Name="sensor" UserDataComponentName="sensorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="monitoringConnectionSmyBase (Settings)" DbObjectName="monitoring.dbo.sensor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[sensor] WHERE (([id_sensor] = @Original_id_sensor) AND ([id_city] = @Original_id_city))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[sensor] ([name_sensor], [id_city]) VALUES (@name_sensor, @id_city);
SELECT id_sensor, name_sensor, id_city FROM sensor WHERE (id_sensor = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_sensor" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="name_sensor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_sensor, name_sensor, id_city FROM dbo.sensor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[sensor] SET [name_sensor] = @name_sensor, [id_city] = @id_city WHERE (([id_sensor] = @Original_id_sensor) AND ([id_city] = @Original_id_city));
SELECT id_sensor, name_sensor, id_city FROM sensor WHERE (id_sensor = @id_sensor)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_sensor" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="name_sensor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_city" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_city" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_sensor" ColumnName="id_sensor" DataSourceName="monitoring.dbo.sensor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_sensor" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_sensor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_sensor" DataSetColumn="id_sensor" />
              <Mapping SourceColumn="name_sensor" DataSetColumn="name_sensor" />
              <Mapping SourceColumn="id_city" DataSetColumn="id_city" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetTotalData1TableAdapter" GeneratorDataComponentClassName="GetTotalData1TableAdapter" Name="GetTotalData1" UserDataComponentName="GetTotalData1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="monitoringConnectionSmyBase (Settings)" DbObjectName="monitoring.dbo.GetTotalData1" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.GetTotalData1</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Total" DataSetColumn="Total" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="monitoringDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="monitoringDataSet" msprop:Generator_UserDSName="monitoringDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="city" msprop:Generator_TableClassName="cityDataTable" msprop:Generator_TableVarName="tablecity" msprop:Generator_TablePropName="city" msprop:Generator_RowDeletingName="cityRowDeleting" msprop:Generator_RowChangingName="cityRowChanging" msprop:Generator_RowEvHandlerName="cityRowChangeEventHandler" msprop:Generator_RowDeletedName="cityRowDeleted" msprop:Generator_UserTableName="city" msprop:Generator_RowChangedName="cityRowChanged" msprop:Generator_RowEvArgName="cityRowChangeEvent" msprop:Generator_RowClassName="cityRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_city" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid_city" msprop:Generator_ColumnPropNameInRow="id_city" msprop:Generator_ColumnPropNameInTable="id_cityColumn" msprop:Generator_UserColumnName="id_city" type="xs:int" />
              <xs:element name="name_city" msprop:Generator_ColumnVarNameInTable="columnname_city" msprop:Generator_ColumnPropNameInRow="name_city" msprop:Generator_ColumnPropNameInTable="name_cityColumn" msprop:Generator_UserColumnName="name_city">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="n_population" msprop:Generator_ColumnVarNameInTable="columnn_population" msprop:Generator_ColumnPropNameInRow="n_population" msprop:Generator_ColumnPropNameInTable="n_populationColumn" msprop:Generator_UserColumnName="n_population" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="climate_data" msprop:Generator_TableClassName="climate_dataDataTable" msprop:Generator_TableVarName="tableclimate_data" msprop:Generator_TablePropName="climate_data" msprop:Generator_RowDeletingName="climate_dataRowDeleting" msprop:Generator_RowChangingName="climate_dataRowChanging" msprop:Generator_RowEvHandlerName="climate_dataRowChangeEventHandler" msprop:Generator_RowDeletedName="climate_dataRowDeleted" msprop:Generator_UserTableName="climate_data" msprop:Generator_RowChangedName="climate_dataRowChanged" msprop:Generator_RowEvArgName="climate_dataRowChangeEvent" msprop:Generator_RowClassName="climate_dataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_data" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid_data" msprop:Generator_ColumnPropNameInRow="id_data" msprop:Generator_ColumnPropNameInTable="id_dataColumn" msprop:Generator_UserColumnName="id_data" type="xs:int" />
              <xs:element name="pressure" msprop:Generator_ColumnVarNameInTable="columnpressure" msprop:Generator_ColumnPropNameInRow="pressure" msprop:Generator_ColumnPropNameInTable="pressureColumn" msprop:Generator_UserColumnName="pressure" type="xs:double" />
              <xs:element name="temperature" msprop:Generator_ColumnVarNameInTable="columntemperature" msprop:Generator_ColumnPropNameInRow="temperature" msprop:Generator_ColumnPropNameInTable="temperatureColumn" msprop:Generator_UserColumnName="temperature" type="xs:int" />
              <xs:element name="humidity" msprop:Generator_ColumnVarNameInTable="columnhumidity" msprop:Generator_ColumnPropNameInRow="humidity" msprop:Generator_ColumnPropNameInTable="humidityColumn" msprop:Generator_UserColumnName="humidity" type="xs:int" />
              <xs:element name="radiation" msprop:Generator_ColumnVarNameInTable="columnradiation" msprop:Generator_ColumnPropNameInRow="radiation" msprop:Generator_ColumnPropNameInTable="radiationColumn" msprop:Generator_UserColumnName="radiation" type="xs:double" />
              <xs:element name="data_date" msprop:Generator_ColumnVarNameInTable="columndata_date" msprop:Generator_ColumnPropNameInRow="data_date" msprop:Generator_ColumnPropNameInTable="data_dateColumn" msprop:Generator_UserColumnName="data_date" type="xs:dateTime" />
              <xs:element name="id_city" msprop:Generator_ColumnVarNameInTable="columnid_city" msprop:Generator_ColumnPropNameInRow="id_city" msprop:Generator_ColumnPropNameInTable="id_cityColumn" msprop:Generator_UserColumnName="id_city" type="xs:int" />
              <xs:element name="id_sensor" msprop:Generator_ColumnVarNameInTable="columnid_sensor" msprop:Generator_ColumnPropNameInRow="id_sensor" msprop:Generator_ColumnPropNameInTable="id_sensorColumn" msprop:Generator_UserColumnName="id_sensor" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="sensor" msprop:Generator_TableClassName="sensorDataTable" msprop:Generator_TableVarName="tablesensor" msprop:Generator_TablePropName="sensor" msprop:Generator_RowDeletingName="sensorRowDeleting" msprop:Generator_RowChangingName="sensorRowChanging" msprop:Generator_RowEvHandlerName="sensorRowChangeEventHandler" msprop:Generator_RowDeletedName="sensorRowDeleted" msprop:Generator_UserTableName="sensor" msprop:Generator_RowChangedName="sensorRowChanged" msprop:Generator_RowEvArgName="sensorRowChangeEvent" msprop:Generator_RowClassName="sensorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_sensor" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid_sensor" msprop:Generator_ColumnPropNameInRow="id_sensor" msprop:Generator_ColumnPropNameInTable="id_sensorColumn" msprop:Generator_UserColumnName="id_sensor" type="xs:int" />
              <xs:element name="name_sensor" msprop:Generator_ColumnVarNameInTable="columnname_sensor" msprop:Generator_ColumnPropNameInRow="name_sensor" msprop:Generator_ColumnPropNameInTable="name_sensorColumn" msprop:Generator_UserColumnName="name_sensor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id_city" msprop:Generator_ColumnVarNameInTable="columnid_city" msprop:Generator_ColumnPropNameInRow="id_city" msprop:Generator_ColumnPropNameInTable="id_cityColumn" msprop:Generator_UserColumnName="id_city" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetTotalData1" msprop:Generator_TableClassName="GetTotalData1DataTable" msprop:Generator_TableVarName="tableGetTotalData1" msprop:Generator_TablePropName="GetTotalData1" msprop:Generator_RowDeletingName="GetTotalData1RowDeleting" msprop:Generator_RowChangingName="GetTotalData1RowChanging" msprop:Generator_RowEvHandlerName="GetTotalData1RowChangeEventHandler" msprop:Generator_RowDeletedName="GetTotalData1RowDeleted" msprop:Generator_UserTableName="GetTotalData1" msprop:Generator_RowChangedName="GetTotalData1RowChanged" msprop:Generator_RowEvArgName="GetTotalData1RowChangeEvent" msprop:Generator_RowClassName="GetTotalData1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Year" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year" type="xs:int" minOccurs="0" />
              <xs:element name="Total" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTotal" msprop:Generator_ColumnPropNameInRow="Total" msprop:Generator_ColumnPropNameInTable="TotalColumn" msprop:Generator_UserColumnName="Total" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:city" />
      <xs:field xpath="mstns:id_city" />
    </xs:unique>
    <xs:unique name="climate_data_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:climate_data" />
      <xs:field xpath="mstns:id_data" />
    </xs:unique>
    <xs:unique name="sensor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:sensor" />
      <xs:field xpath="mstns:id_sensor" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK" msdata:parent="sensor" msdata:child="climate_data" msdata:parentkey="id_sensor" msdata:childkey="id_sensor" msprop:Generator_UserChildTable="climate_data" msprop:Generator_ChildPropName="Getclimate_dataRows" msprop:Generator_UserRelationName="FK" msprop:Generator_RelationVarName="relationFK" msprop:Generator_UserParentTable="sensor" msprop:Generator_ParentPropName="sensorRow" />
      <msdata:Relationship name="FK__x0028_id_city_x0029_dclimate_data_in__x0028_id_city_x0029_city" msdata:parent="city" msdata:child="climate_data" msdata:parentkey="id_city" msdata:childkey="id_city" msprop:Generator_UserChildTable="climate_data" msprop:Generator_ChildPropName="Getclimate_dataRows" msprop:Generator_UserRelationName="FK_(id_city)dclimate_data_in_(id_city)city" msprop:Generator_ParentPropName="cityRow" msprop:Generator_RelationVarName="_relationFK__id_city_dclimate_data_in__id_city_city" msprop:Generator_UserParentTable="city" />
      <msdata:Relationship name="FK__x0028_id_city_x0029_city_in__x0028_id_city_x0029_sensor" msdata:parent="city" msdata:child="sensor" msdata:parentkey="id_city" msdata:childkey="id_city" msprop:Generator_UserChildTable="sensor" msprop:Generator_ChildPropName="GetsensorRows" msprop:Generator_UserRelationName="FK_(id_city)city_in_(id_city)sensor" msprop:Generator_ParentPropName="cityRow" msprop:Generator_RelationVarName="_relationFK__id_city_city_in__id_city_sensor" msprop:Generator_UserParentTable="city" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>